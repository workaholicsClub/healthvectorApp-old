apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 26
    buildToolsVersion "25.0.3"

    applicationVariants.all { variant -> renameArtifact(variant, defaultConfig) }

    retrolambda {
        defaultMethods true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "ru.android.childdiary"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 55
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "int", "DB_VERSION", "1"
        buildConfigField "String", "DB_NAME", "\"diary.db\""

        resValue "string", "file_provider_authorities", "ru.android.childdiary"

        resValue "string", "font_path_regular", "fonts/Roboto-Regular.ttf"
        resValue "string", "font_path_bold", "fonts/Roboto-Bold.ttf"
        resValue "string", "font_path_medium", "fonts/Roboto-Medium.ttf"
        resValue "string", "font_path_splash", "fonts/Proxima-Nova-Semibold.otf"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            // 20:FB:F4:CD:2E:1B:66:22:7A:BA:68:27:91:AB:5E:AE:E0:FE:FF:97
        }
        release {
            storeFile file("cev.jks")
            storePassword 'Opaocah7'
            keyAlias 'CevKey'
            keyPassword 'Ro8weinu'
            // C3:2C:72:48:24:A5:4E:38:02:C6:49:93:EC:67:5A:E9:8C:0D:32:66
        }
    }
    buildTypes {
        debug {
            //resValue "string", "font_path_regular", "fonts/OpenSansCondensed-LightItalic.ttf"
            //resValue "string", "font_path_bold", "fonts/OpenSansCondensed-Light.ttf"
            //resValue "string", "font_path_medium", "fonts/OpenSansCondensed-Bold.ttf"

            signingConfig signingConfigs.debug

            shrinkResources false
            minifyEnabled false
            proguardFiles 'proguard.cfg', 'proguard-rules.pro'

            manifestPlaceholders += [fabricApiKey: "9a8fc272c5361d9a35b084ac9b0e810d8a453b93"]

            // logging
            buildConfigField "boolean", "PRINT_LOGS_TO_FILE", "true"
            buildConfigField "boolean", "PRINT_LOGS_TO_LOGCAT", "true"
            buildConfigField "boolean", "DUMP_OUT_OF_MEMORY", "true"
            buildConfigField "boolean", "PRINT_HTTP_LOGS", "true"
            buildConfigField "boolean", "PRINT_DB_LOGS", "true"
            buildConfigField "boolean", "SHOW_ERROR_DIALOGS", "true"
            // other
            buildConfigField "boolean", "ENABLE_CONFIGURATION_CHANGE", "true"
            buildConfigField "boolean", "SHOW_CLOUD_ON_EACH_START", "false"
            buildConfigField "boolean", "SHOW_APP_INTRO_ON_EACH_START", "false"
            buildConfigField "boolean", "USE_FAKE_INTERCEPTOR", "false"
            buildConfigField "boolean", "COPY_BACKUP_TO_EXTERNAL_STORAGE", "true"
        }
        qa {
            debuggable true

            signingConfig signingConfigs.debug

            shrinkResources true
            minifyEnabled true
            proguardFiles 'proguard.cfg', 'proguard-rules.pro'

            manifestPlaceholders += [fabricApiKey: "22d69a10edc8bae02f118c1fc460a0c40c48c56b"]

            // logging
            buildConfigField "boolean", "PRINT_LOGS_TO_FILE", "true"
            buildConfigField "boolean", "PRINT_LOGS_TO_LOGCAT", "true"
            buildConfigField "boolean", "DUMP_OUT_OF_MEMORY", "true"
            buildConfigField "boolean", "PRINT_HTTP_LOGS", "true"
            buildConfigField "boolean", "PRINT_DB_LOGS", "true"
            buildConfigField "boolean", "SHOW_ERROR_DIALOGS", "true"
            // other
            buildConfigField "boolean", "ENABLE_CONFIGURATION_CHANGE", "false"
            buildConfigField "boolean", "SHOW_CLOUD_ON_EACH_START", "false"
            buildConfigField "boolean", "SHOW_APP_INTRO_ON_EACH_START", "false"
            buildConfigField "boolean", "USE_FAKE_INTERCEPTOR", "false"
            buildConfigField "boolean", "COPY_BACKUP_TO_EXTERNAL_STORAGE", "true"
        }
        release {
            //debuggable true

            signingConfig signingConfigs.release

            shrinkResources true
            minifyEnabled true
            proguardFiles 'proguard.cfg', 'proguard-rules.pro'

            manifestPlaceholders += [fabricApiKey: "22d69a10edc8bae02f118c1fc460a0c40c48c56b"]

            // logging
            buildConfigField "boolean", "PRINT_LOGS_TO_FILE", "false"
            buildConfigField "boolean", "PRINT_LOGS_TO_LOGCAT", "false"
            buildConfigField "boolean", "DUMP_OUT_OF_MEMORY", "false"
            buildConfigField "boolean", "PRINT_HTTP_LOGS", "false"
            buildConfigField "boolean", "PRINT_DB_LOGS", "false"
            buildConfigField "boolean", "SHOW_ERROR_DIALOGS", "false"
            // other
            buildConfigField "boolean", "ENABLE_CONFIGURATION_CHANGE", "false"
            buildConfigField "boolean", "SHOW_CLOUD_ON_EACH_START", "false"
            buildConfigField "boolean", "SHOW_APP_INTRO_ON_EACH_START", "false"
            buildConfigField "boolean", "USE_FAKE_INTERCEPTOR", "false"
            buildConfigField "boolean", "COPY_BACKUP_TO_EXTERNAL_STORAGE", "false"
        }
    }
}

def renameArtifact(variant, defaultConfig) {
    variant.outputs.each { output ->
        def formattedDate = new Date().format("yyyy.MM.dd")
        def fileName = applicationName + "_" + formattedDate + "_v" + defaultConfig.versionName + "(" + defaultConfig.versionCode + ")_" + variant.name + ".apk"

        def file = output.packageApplication.outputFile
        output.packageApplication.outputFile = new File(file.parent, fileName)
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:multidex:1.0.1"

    compile "org.slf4j:slf4j-api:1.7.22"

    compile("com.crashlytics.sdk.android:crashlytics:2.6.8@aar") {
        transitive = true;
    }

    def logbackVersion = '1.1.1-6'
    compile "com.github.tony19:logback-android-core:$logbackVersion"
    compile("com.github.tony19:logback-android-classic:$logbackVersion") {
        exclude group: 'com.google.android', module: 'android'
    }

    androidTestCompile("com.android.support.test.espresso:espresso-core:2.2.2", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
    testCompile "junit:junit:4.12"

    def androidSupportVersion = '26.0.1'
    compile "com.android.support:support-v4:$androidSupportVersion"
    compile "com.android.support:appcompat-v7:$androidSupportVersion"
    compile "com.android.support:design:$androidSupportVersion"
    compile "com.android.support:recyclerview-v7:$androidSupportVersion"
    compile "com.android.support:cardview-v7:$androidSupportVersion"

    compile "io.reactivex.rxjava2:rxjava:2.1.1"
    compile "io.reactivex.rxjava2:rxandroid:2.0.1"

    compile "com.jakewharton.rxbinding2:rxbinding:2.0.0"

    def requeryVersion = '1.3.2'
    compile "io.requery:requery:$requeryVersion"
    compile "io.requery:requery-android:$requeryVersion"
    annotationProcessor "io.requery:requery-processor:$requeryVersion"

    def retrofitVersion = '2.3.0'
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    compile("com.squareup.retrofit2:converter-simplexml:$retrofitVersion") {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
        exclude group: 'xpp3', module: 'xpp3'
    }

    compile "com.squareup.okhttp3:logging-interceptor:3.8.1"

    compile "net.danlew:android.joda:2.9.9"

    def daggerVersion = '2.11'
    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    compile "javax.annotation:jsr250-api:1.0"

    def moxyVersion = '1.5.3'
    compile "com.arello-mobile:moxy:$moxyVersion"
    compile "com.arello-mobile:moxy-android:$moxyVersion"
    compile "com.arello-mobile:moxy-app-compat:$moxyVersion"
    annotationProcessor "com.arello-mobile:moxy-compiler:$moxyVersion"

    def lombokVersion = '1.16.12'
    provided "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    def butterknifeVersion = '8.6.0'
    compile "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    def icepickVersion = '3.2.0'
    compile "frankiesardo:icepick:$icepickVersion"
    provided "frankiesardo:icepick-processor:$icepickVersion"

    compile "com.f2prateek.rx.preferences2:rx-preferences:2.0.0-RC1"

    compile "com.yalantis:ucrop:2.2.0"

    compile("com.mikepenz:materialdrawer:5.9.4@aar") {
        transitive = true
    }

    compile "com.makeramen:roundedimageview:2.3.0"

    compile "com.wdullaer:materialdatetimepicker:3.2.2"

    // используем версию 1.3.0 -- последнюю, которая поддерживает API level 14
    compile("com.github.ozodrukh:CircularReveal:1.3.0@aar") {
        transitive = true;
    }

    compile "com.daimajia.swipelayout:library:1.2.0@aar"

    compile "com.splitwise:tokenautocomplete:2.0.8@aar"
    compile "com.xiaofeng.android:flowlayoutmanager:1.2.3.2"

    compile "me.zhanghai.android.materialprogressbar:library:1.4.1"

    compile "com.github.PhilJay:MPAndroidChart:v3.0.2"

    compile "uk.co.chrisjenx:calligraphy:2.3.0"

    compile "com.google.android.gms:play-services-drive:11.0.2"
    compile "com.google.android.gms:play-services-auth:11.0.2"
    compile("com.google.api-client:google-api-client-android:1.22.0") {
        exclude group: 'org.apache.httpcomponents'
    }
    compile("com.google.apis:google-api-services-drive:v3-rev76-1.22.0") {
        exclude group: 'org.apache.httpcomponents'
    }
}
